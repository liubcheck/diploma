stages:
  - build
  - package
  - deploy

variables:
  DOCKER_IMAGE_PREFIX: "diploma"
  POSTGRES_VOLUME: "pgdata"

build:
  stage: build
  image: maven:3.8.1-openjdk-17
  script:
    - mvn clean package
  artifacts:
    paths:
      - eureka-server/target/*.jar
      - api-gateway/target/*.jar
      - lesson-service/target/*.jar

package:
  stage: package
  image: docker:19.03.12
  services:
    - docker:dind
  script:
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" -p "$DOCKER_PASSWORD" docker.io
    - docker build -t $DOCKER_IMAGE_PREFIX/eureka-server:prod ./eureka-server/
    - docker push $DOCKER_USERNAME/$DOCKER_IMAGE_PREFIX/eureka-server:prod
    - docker build -t $DOCKER_IMAGE_PREFIX/api-gateway:prod ./api-gateway/
    - docker push $DOCKER_USERNAME/$DOCKER_IMAGE_PREFIX/api-gateway:prod
    - docker build -t $DOCKER_IMAGE_PREFIX/lesson-service:prod ./lesson-service/
    - docker push $DOCKER_USERNAME/$DOCKER_IMAGE_PREFIX/lesson-service:prod
  only:
    - main

deploy:
  stage: deploy
  image: docker:19.03.12
  services:
    - docker:dind
  before_script:
    - apk add --no-cache docker-compose
  script:
    - docker-compose -f docker-compose.prod.yml up -d
  only:
    - main
